                  2   $LIST
0000              4   
0000              5   ;  N76E003 pinout:
0000              6   ;                               -------
0000              7   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000              8   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000              9   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000             10   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             11   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             12   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             13   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             14   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             15   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             16   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             17   ;                               -------
0000             18   ;
0000             19   
0000             20   CLK                 EQU 16600000 ; Microcontroller system oscillator frequency in Hz
0000             21   TIMER2_RATE         EQU 100      ; 100Hz or 10ms
0000             22   TIMER2_RELOAD       EQU (65536-(CLK/(16*TIMER2_RATE))) ; Need to change timer 2 input divide to 16 in T2MOD
0000             23   
0000             24   ; Output
0000             25   PWM_OUT    EQU P1.5 ; Logic 1=oven on
0000             26   
0000             27   BSEG
0000             28   s_flag: dbit 1 ; set to 1 every time a second has passed
0001             29   
0030             30   DSEG at 0x30
0030             31   pwm_counter:  ds 1 ; Free running counter 0, 1, 2, ..., 100, 0
0031             32   pwm:          ds 1 ; pwm percentage
0032             33   seconds:      ds 1 ; a seconds counter attached to Timer 2 ISR
0033             34   
0000             35   CSEG
0000             36   
0000             37   ; Reset vector
0000             38   org 0x0000
0000 020172      39       ljmp main
0003             40   
0003             41   ; External interrupt 0 vector (not used in this code)
0003             42   org 0x0003
0003 32          43            reti
0004             44   
0004             45   ; Timer/Counter 0 overflow interrupt vector (not used in this code)
000B             46   org 0x000B
000B 32          47            reti
000C             48   
000C             49   ; External interrupt 1 vector (not used in this code)
0013             50   org 0x0013
0013 32          51            reti
0014             52   
0014             53   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             54   org 0x001B
001B 32          55            reti
001C             56   
001C             57   ; Serial port receive/transmit interrupt vector (not used in this code)
0023             58   org 0x0023 
0023 32          59            reti
0024             60            
0024             61   ; Timer/Counter 2 overflow interrupt vector
002B             62   org 0x002B
002B 02012F      63            ljmp Timer2_ISR
002E             64   
002E             65   ; These 'equ' must match the hardware wiring
002E             66   LCD_RS equ P1.3
002E             67   LCD_E  equ P1.4
002E             68   LCD_D4 equ P0.0
002E             69   LCD_D5 equ P0.1
002E             70   LCD_D6 equ P0.2
002E             71   LCD_D7 equ P0.3
002E             72   
                 74   $LIST
0100             76   
0100             77   Init_All:
0100             78            ; Configure all the pins for biderectional I/O
0100 75AC00      79            mov     P3M1, #0x00
0103 75AD00      80            mov     P3M2, #0x00
0106 75B300      81            mov     P1M1, #0x00
0109 75B400      82            mov     P1M2, #0x00
010C 75B100      83            mov     P0M1, #0x00
010F 75B200      84            mov     P0M2, #0x00
0112             85            
0112             86            ; Initialize timer 2 for periodic interrupts
0112 75C800      87            mov T2CON, #0 ; Stop timer/counter.  Autoreload mode.
0115 75CDD7      88            mov TH2, #high(TIMER2_RELOAD)
0118 75CC79      89            mov TL2, #low(TIMER2_RELOAD)
011B             90            ; Set the reload value
011B 75C9A0      91            mov T2MOD, #0b1010_0000 ; Enable timer 2 autoreload, and clock divider is 16
011E 75CBD7      92            mov RCMP2H, #high(TIMER2_RELOAD)
0121 75CA79      93            mov RCMP2L, #low(TIMER2_RELOAD)
0124             94            ; Init the free running 10 ms counter to zero
0124 753000      95            mov pwm_counter, #0
0127             96            ; Enable the timer and interrupts
0127 439B80      97            orl EIE, #0x80 ; Enable timer 2 interrupt ET2=1
012A D2CA        98       setb TR2  ; Enable timer 2
012C             99   
012C D2AF       100            setb EA ; Enable global interrupts
012E            101            
012E 22         102            ret
012F            103   
012F            104   ;---------------------------------;
012F            105   ; ISR for timer 2                 ;
012F            106   ;---------------------------------;
012F            107   Timer2_ISR:
012F C2CF       108            clr TF2  ; Timer 2 doesn't clear TF2 automatically. Do it in the ISR.  It is bit addressable.
0131 C0D0       109            push psw
0133 C0E0       110            push acc
0135            111            
0135 0530       112            inc pwm_counter
0137 C3         113            clr c
0138 E531       114            mov a, pwm
013A 9530       115            subb a, pwm_counter ; If pwm_counter <= pwm then c=1
013C B3         116            cpl c
013D 9295       117            mov PWM_OUT, c
013F            118            
013F E530       119            mov a, pwm_counter
0141 B46407     120            cjne a, #100, Timer2_ISR_done
0144 753000     121            mov pwm_counter, #0
0147 0532       122            inc seconds ; It is super easy to keep a seconds count here
0149 D200       123            setb s_flag
014B            124   
014B            125   Timer2_ISR_done:
014B D0E0       126            pop acc
014D D0D0       127            pop psw
014F 32         128            reti
0150            129   
0150            130   line1:
0150 50574D20   131            DB 'PWM Example     '
     4578616D
     706C6520
     20202020
0160 00         132            DB 0
0161            133   line2:
0161 43686B20   134            DB 'Chk pin 15:P1.0 '
     70696E20
     31353A50
     312E3020
0171 00         135            DB 0
0172            136   
0172            137   main:
0172 75817F     138            mov sp, #07FH
0175 120100     139            lcall INIT_ALL
0178 120087     140       lcall LCD_4BIT
017B            141   
017B C0E0       142            push acc
017D 7401       142            mov a, #1
017F 14         142            dec a
0180 1200C7     142            lcall ?Set_Cursor_1 ; Select column and row
0183 D0E0       142            pop acc
0185 900150     143            mov dptr, #line1
0188 1200BA     144            lcall ?Send_Constant_String
018B C0E0       145            push acc
018D 7401       145            mov a, #1
018F 14         145            dec a
0190 1200C5     145            lcall ?Set_Cursor_2 ; Select column and row
0193 D0E0       145            pop acc
0195 900161     146            mov dptr, #Line2
0198 1200BA     147            lcall ?Send_Constant_String
019B            148            
019B 753132     149            mov pwm, #50 ; The pwm in percentage (0 to 100) we want.  Change and check with oscilloscope.
019E            150   
019E            151   Forever:
019E 02019E     152            ljmp Forever    
01A1            153   END
