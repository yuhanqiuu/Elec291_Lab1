                  2   $LIST
0000              4   
0000              5   ;  N76E003 pinout:
0000              6   ;                               -------
0000              7   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000              8   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000              9   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000             10   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             11   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             12   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             13   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             14   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             15   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             16   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             17   ;                               -------
0000             18   ;
0000             19   
0000             20   CLK           EQU 16600000 ; Microcontroller system frequency in Hz
0000             21   TIMER0_RATE   EQU 2048     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000             22   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000             23   
0000             24   ;---------------------------------;
0000             25   ; Key board                       ;
0000             26   ;---------------------------------;
0000             27   C3_RATE equ 262
0000             28   C3_KEY EQU ((65536-(CLK/C3_RATE)))
0000             29   D3_RATE equ 294
0000             30   D3_KEY EQU ((65536-(CLK/D3_RATE)))
0000             31   B3_RATE equ 494
0000             32   B3_KEY EQU ((65536-(CLK/B3_RATE)))
0000             33   Gs3_RATE equ 415
0000             34   Gs3_KEY EQU ((65536-(CLK/Gs3_RATE)))
0000             35   A3_RATE equ 440
0000             36   A3_KEY EQU ((65536-(CLK/A3_RATE)))
0000             37   
0000             38   C4_RATE equ 523
0000             39   C4_KEY EQU ((65536-(CLK/C4_RATE)))
0000             40   D4_RATE equ 587
0000             41   D4_KEY EQU ((65536-(CLK/C4_RATE)))
0000             42   E4_RATE equ 479
0000             43   E4_KEY EQU ((65536-(CLK/E4_RATE)))
0000             44   Gs4_RATE equ 831
0000             45   Gs4_KEY EQU ((65536-(CLK/Gs4_RATE)))
0000             46   A4_RATE equ 880
0000             47   A4_KEY EQU ((65536-(CLK/A4_RATE)))
0000             48   B4_RATE equ 988
0000             49   B4_KEY EQU ((65536-(CLK/B4_RATE)))
0000             50   
0000             51   C5_RATE equ 1047
0000             52   C5_KEY EQU ((65536-(CLK/C5_RATE)))
0000             53   D5_RATE equ 1175
0000             54   D5_KEY EQU ((65536-(CLK/D5_RATE)))
0000             55   Ds5_RATE equ 1245
0000             56   Ds5_KEY EQU ((65536-(CLK/Ds5_RATE)))
0000             57   E5_RATE equ 1319
0000             58   E5_KEY EQU ((65536-(CLK/E5_RATE)))
0000             59   F5_RATE equ 1397
0000             60   F5_KEY EQU ((65536-(CLK/F5_RATE)))
0000             61   Fs5_RATE equ 1480
0000             62   Fs5_KEY EQU ((65536-(CLK/Fs5_RATE)))
0000             63   G5_RATE equ 1568
0000             64   G5_KEY EQU ((65536-(CLK/G5_RATE)))
0000             65   Gs5_RATE equ 1661
0000             66   Gs5_KEY EQU ((65536-(CLK/Gs5_RATE)))
0000             67   A5_RATE equ 1760
0000             68   A5_KEY EQU ((65536-(CLK/A5_RATE)))
0000             69   B5_RATE equ 1976
0000             70   B5_KEY EQU ((65536-(CLK/B5_RATE)))
0000             71   
0000             72   C6_RATE equ 2093
0000             73   C6_KEY EQU ((65536-(CLK/C6_RATE)))
0000             74   E6_RATE equ 2637
0000             75   E6_KEY EQU ((65536-(CLK/E6_RATE)))
0000             76   MUTE_KEY EQU 0
0000             77   ;----------------------------------
0000             78   SOUND_OUT     equ P1.7
0000             79   
0000             80   ; Reset vector
0000             81   org 0x0000
0000 0202D7      82       ljmp main
0003             83   
0003             84   ; External interrupt 0 vector (not used in this code)
0003             85   org 0x0003
0003 32          86            reti
0004             87   
0004             88   ; Timer/Counter 0 overflow interrupt vector
000B             89   org 0x000B
000B 02020D      90            ljmp Timer0_ISR
000E             91   
000E             92   ; External interrupt 1 vector (not used in this code)
0013             93   org 0x0013
0013 32          94            reti
0014             95   
0014             96   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             97   org 0x001B
001B 32          98            reti
001C             99   
001C            100   ; Serial port receive/transmit interrupt vector (not used in this code)
0023            101   org 0x0023 
0023 32         102            reti
0024            103   
0024            104   
0024            105   ; In the 8051 we can define direct access variables starting at location 0x30 up to location 0x7F
0030            106   dseg at 0x30
0030            107   Count1ms:     ds 2 ; Used to determine when half second has passed
0032            108   Melody_Reload: ds 2
0034            109   ; In the 8051 we have variables that are 1-bit in size.  We can use the setb, clr, jb, and jnb
0034            110   ; instructions with these variables.  This is how you define a 1-bit variable:
0000            111   bseg
0000            112   half_seconds_flag: dbit 1 ; Set to one in the ISR every time 500 ms had passed
0001            113   
0024            114   cseg
0024            115   ; These 'equ' must match the hardware wiring
0024            116   LCD_RS equ P1.3
0024            117   ;LCD_RW equ PX.X ; Not used in this code, connect the pin to GND
0024            118   LCD_E  equ P1.4
0024            119   LCD_D4 equ P0.0
0024            120   LCD_D5 equ P0.1
0024            121   LCD_D6 equ P0.2
0024            122   LCD_D7 equ P0.3
0024            123   
                125   $LIST
00F6            127   
00F6            128   ;                     1234567890123456    <- This helps determine the location of the counter
00F6 20203E4D   129   Initial_Message:  db '  >Music Test<  ', 0
     75736963
     20546573
     743C2020
     00
0107 20202020   130   clear_screen:      db '                ', 0
     20202020
     20202020
     20202020
     00
0118            131   
0118            132   ;---------------------------------;
0118            133   ; Define special chars here       ;
0118            134   ;---------------------------------;
0118            135   fire:
0118 7440       136            mov   A,#40H         ;Load the location where we want to store
011A 120078     137       lcall ?WriteCommand    ;Send the command
011D 7409       138       mov   A,#09H         ;Load row 1 data
011F 120073     139       lcall ?WriteData   ;Send the data
0122 7400       140       mov   A,#00H         ;Load row 2 data
0124 120073     141       lcall ?WriteData   ;Send the data
0127 7414       142       mov   A,#14H         ;Load row 3 data
0129 120073     143       lcall ?WriteData   ;Send the data
012C 7406       144       mov   A,#06H         ;Load row 4 data
012E 120073     145       lcall ?WriteData   ;Send the data
0131 740F       146       mov   A,#0FH         ;Load row 5 data
0133 120073     147       lcall ?WriteData   ;Send the data
0136 741B       148       mov   A,#1BH         ;Load row 6 data
0138 120073     149       lcall ?WriteData   ;Send the data
013B 7411       150       mov   A,#11H         ;Load row 7 data
013D 1173       151       acall ?WriteData   ;Send the data
013F 740E       152       mov   A,#0EH         ;Load row 8 data
0141 120073     153       lcall ?WriteData   ;Send the data
0144 22         154       ret                  ;Return from routine
0145            155   
0145            156   double_eighth:
0145 7448       157       mov   A,#48H         ;Load the location where we want to store
0147 120078     158       lcall ?WriteCommand    ;Send the command
014A 7400       159       mov   A,#00H         ;Load row 1 data
014C 120073     160       lcall ?WriteData   ;Send the data
014F 740F       161       mov   A,#0FH         ;Load row 2 data
0151 120073     162       lcall ?WriteData   ;Send the data
0154 7409       163       mov   A,#09H         ;Load row 3 data
0156 120073     164       lcall ?WriteData   ;Send the data
0159 7409       165       mov   A,#09H         ;Load row 4 data
015B 120073     166       lcall ?WriteData   ;Send the data
015E 741B       167       mov   A,#1BH         ;Load row 5 data
0160 120073     168       lcall ?WriteData   ;Send the data
0163 741B       169       mov   A,#1BH         ;Load row 6 data
0165 120073     170       lcall ?WriteData   ;Send the data
0168 7400       171       mov   A,#00H         ;Load row 7 data
016A 1173       172       acall ?WriteData   ;Send the data
016C 7400       173       mov   A,#00H         ;Load row 8 data
016E 120073     174       lcall ?WriteData   ;Send the data
0171 22         175       ret                  ;Return from routine
0172            176       
0172            177   eighth:
0172 7450       178       mov   A,#50H         ;Load the location where we want to store
0174 120078     179       lcall ?WriteCommand    ;Send the command
0177 7404       180       mov   A,#04H         ;Load row 1 data
0179 120073     181       lcall ?WriteData   ;Send the data
017C 7406       182       mov   A,#06H         ;Load row 2 data
017E 120073     183       lcall ?WriteData   ;Send the data
0181 7405       184       mov   A,#05H         ;Load row 3 data
0183 120073     185       lcall ?WriteData   ;Send the data
0186 7404       186       mov   A,#04H         ;Load row 4 data
0188 120073     187       lcall ?WriteData   ;Send the data
018B 740C       188       mov   A,#0CH         ;Load row 5 data
018D 120073     189       lcall ?WriteData   ;Send the data
0190 7414       190       mov   A,#14H         ;Load row 6 data
0192 120073     191       lcall ?WriteData   ;Send the data
0195 7408       192       mov   A,#08H         ;Load row 7 data
0197 1173       193       acall ?WriteData   ;Send the data
0199 7400       194       mov   A,#00H         ;Load row 8 data
019B 120073     195       lcall ?WriteData   ;Send the data
019E 22         196       ret                  ;Return from routine
019F            197   
019F            198   heart:
019F 7458       199       mov   A,#58H         ;Load the location where we want to store
01A1 120078     200       lcall ?WriteCommand    ;Send the command
01A4 7400       201       mov   A,#00H         ;Load row 1 data
01A6 120073     202       lcall ?WriteData   ;Send the data
01A9 740A       203       mov   A,#0AH         ;Load row 2 data
01AB 120073     204       lcall ?WriteData   ;Send the data
01AE 7415       205       mov   A,#15H         ;Load row 3 data
01B0 120073     206       lcall ?WriteData   ;Send the data
01B3 7411       207       mov   A,#11H         ;Load row 4 data
01B5 120073     208       lcall ?WriteData   ;Send the data
01B8 7411       209       mov   A,#11H         ;Load row 5 data
01BA 120073     210       lcall ?WriteData   ;Send the data
01BD 740A       211       mov   A,#0AH         ;Load row 6 data
01BF 120073     212       lcall ?WriteData   ;Send the data
01C2 7404       213       mov   A,#04H         ;Load row 7 data
01C4 1173       214       acall ?WriteData   ;Send the data
01C6 7400       215       mov   A,#00H         ;Load row 8 data
01C8 120073     216       lcall ?WriteData   ;Send the data
01CB 22         217       ret                  ;Return from routine
01CC            218   bell:
01CC 7460       219       mov   A,#60H         ;Load the location where we want to store
01CE 120078     220       lcall ?WriteCommand    ;Send the command
01D1 7400       221       mov   A,#00H         ;Load row 1 data
01D3 120073     222       lcall ?WriteData   ;Send the data
01D6 7404       223       mov   A,#04H          ;Load row 2 data
01D8 120073     224       lcall ?WriteData   ;Send the data
01DB 740E       225       mov   A,#0eH          ;Load row 3 data
01DD 120073     226       lcall ?WriteData   ;Send the data
01E0 740E       227       mov   A,#0eH         ;Load row 4 data
01E2 120073     228       lcall ?WriteData   ;Send the data
01E5 740E       229       mov   A,#0eH         ;Load row 5 data
01E7 120073     230       lcall ?WriteData   ;Send the data
01EA 741F       231       mov   A,#1fH         ;Load row 6 data
01EC 120073     232       lcall ?WriteData   ;Send the data
01EF 7400       233       mov   A,#00H         ;Load row 7 data
01F1 1173       234       acall ?WriteData   ;Send the data
01F3 7404       235       mov   A,#04H         ;Load row 8 data
01F5 120073     236       lcall ?WriteData   ;Send the data
01F8 22         237       ret                  ;Return from routine
01F9            238   
01F9            239   ;---------------------------------;
01F9            240   ; Routine to initialize the ISR   ;
01F9            241   ; for timer 0                     ;
01F9            242   ;---------------------------------;
01F9            243   Timer0_Init:
01F9 438E08     244            orl CKCON, #0b00001000 ; Input for timer 0 is sysclk/1
01FC E589       245            mov a, TMOD
01FE 54F0       246            anl a, #0xf0 ; 11110000 Clear the bits for timer 0
0200 4401       247            orl a, #0x01 ; 00000001 Configure timer 0 as 16-timer
0202 F589       248            mov TMOD, a
0204 758C7C     249            mov TH0, #high(B3_KEY)
0207 758ABD     250            mov TL0, #low(B3_KEY)
020A            251            ; Enable the timer and interrupts
020A            252       ;setb ET0  ; Enable timer 0 interrupt
020A D28C       253       setb TR0  ; Start timer 0
020C 22         254            ret
020D            255   
020D            256   ;---------------------------------;
020D            257   ; ISR for timer 0.  Set to execute;
020D            258   ; every 1/4096Hz to generate a    ;
020D            259   ; 2048 Hz wave at pin SOUND_OUT   ;
020D            260   ;---------------------------------;
020D            261   Timer0_ISR:
020D            262            ;clr TF0  ; According to the data sheet this is done for us already.
020D            263            ; Timer 0 doesn't have 16-bit auto-reload, so
020D C28C       264            clr TR0
020F            265            ;mov TH0, #high(TIMER0_RELOAD)
020F            266            ;mov TL0, #low(TIMER0_RELOAD)
020F 85338C     267            mov TH0, Melody_Reload+1
0212 85328A     268            mov TL0, Melody_Reload+0
0215 D28C       269            setb TR0
0217 B297       270            cpl SOUND_OUT ; Connect speaker the pin assigned to 'SOUND_OUT'!
0219 32         271            reti
021A            272   
021A            273   Display_special_char1:
021A 12019F     274            lcall heart
021D 7481       275            mov a, #0x81
021F 120078     276            lcall ?WriteCommand
0222 7403       277            mov a, #3H
0224 120073     278            lcall ?WriteData
0227            279   
0227 120172     280            lcall eighth
022A 74C4       281            mov a, #0xC4
022C 120078     282            lcall ?WriteCommand
022F 7402       283            mov a, #2H
0231 120073     284            lcall ?WriteData
0234            285   
0234 1201CC     286            lcall bell
0237 7487       287            mov a, #0x87
0239 120078     288            lcall ?WriteCommand
023C 7404       289            mov a, #4H
023E 120073     290            lcall ?WriteData
0241            291   
0241 120145     292            lcall double_eighth
0244 74CA       293            mov a, #0xCA
0246 120078     294            lcall ?WriteCommand
0249 7401       295            mov a, #1H
024B 120073     296            lcall ?WriteData
024E            297   
024E 12019F     298            lcall heart
0251 748D       299            mov a, #0x8D
0253 120078     300            lcall ?WriteCommand
0256 7403       301            mov a, #3H
0258 120073     302            lcall ?WriteData
025B 32         303            reti
025C            304            
025C            305   Display_special_char2:
025C 12019F     306            lcall heart
025F 74C0       307            mov a, #0xC0
0261 120078     308            lcall ?WriteCommand
0264 7403       309            mov a, #3H
0266 120073     310            lcall ?WriteData
0269            311   
0269 120172     312            lcall eighth
026C 7483       313            mov a, #0x83
026E 120078     314            lcall ?WriteCommand
0271 7402       315            mov a, #2H
0273 120073     316            lcall ?WriteData
0276            317   
0276 1201CC     318            lcall bell
0279 74C7       319            mov a, #0xC7
027B 120078     320            lcall ?WriteCommand
027E 7404       321            mov a, #4H
0280 120073     322            lcall ?WriteData
0283            323   
0283 120145     324            lcall double_eighth
0286 748B       325            mov a, #0x8B
0288 120078     326            lcall ?WriteCommand
028B 7401       327            mov a, #1H
028D 120073     328            lcall ?WriteData
0290            329   
0290 12019F     330            lcall heart
0293 74CE       331            mov a, #0xCE
0295 120078     332            lcall ?WriteCommand
0298 7403       333            mov a, #3H
029A 120073     334            lcall ?WriteData
029D 32         335            reti
029E            336   
029E            337   clear_screen_func:
029E            338       
029E C0E0       339            push acc
02A0 7401       339            mov a, #1
02A2 14         339            dec a
02A3 1200BD     339            lcall ?Set_Cursor_1 ; Select column and row
02A6 D0E0       339            pop acc
02A8 C083       340            push dph
02AA C082       340            push dpl
02AC C0E0       340            push acc
02AE 900107     340            mov dptr, #clear_screen
02B1 1200B0     340            lcall ?Send_Constant_String
02B4 D0E0       340            pop acc
02B6 D082       340            pop dpl
02B8 D083       340            pop dph
02BA C0E0       341            push acc
02BC 7401       341            mov a, #1
02BE 14         341            dec a
02BF 1200BB     341            lcall ?Set_Cursor_2 ; Select column and row
02C2 D0E0       341            pop acc
02C4 C083       342            push dph
02C6 C082       342            push dpl
02C8 C0E0       342            push acc
02CA 900107     342            mov dptr, #clear_screen
02CD 1200B0     342            lcall ?Send_Constant_String
02D0 D0E0       342            pop acc
02D2 D082       342            pop dpl
02D4 D083       342            pop dph
02D6 32         343       reti
02D7            344       
02D7            345       
02D7            346   ;---------------------------------;
02D7            347   ; Main program. Includes hardware ;
02D7            348   ; initialization and 'forever'    ;
02D7            349   ; loop.                           ;
02D7            350   ;---------------------------------;
02D7            351   main:
02D7            352            ; Initialization
02D7 75817F     353       mov SP, #0x7F
02DA 75B100     354       mov P0M1, #0x00
02DD 75B200     355       mov P0M2, #0x00
02E0 75B300     356       mov P1M1, #0x00
02E3 75B400     357       mov P1M2, #0x00
02E6 75AD00     358       mov P3M2, #0x00
02E9 75AD00     359       mov P3M2, #0x00
02EC 1201F9     360       lcall Timer0_Init
02EF D2AF       361       setb EA   ; Enable Global interrupts
02F1 12007D     362       lcall LCD_4BIT
02F4 C083       363            push dph
02F6 C082       363            push dpl
02F8 C0E0       363            push acc
02FA 9000F6     363            mov dptr, #Initial_Message
02FD 1200B0     363            lcall ?Send_Constant_String
0300 D0E0       363            pop acc
0302 D082       363            pop dpl
0304 D083       363            pop dph
0306            364   
0306            365   Turkish_March:
0306 D2A9       366            setb ET0
0308            367   
0308 12021A     368       lcall Display_special_char1
030B            369   
030B 75337C     370            mov Melody_Reload+1, #high(B3_KEY)
030E 7532BD     371            mov Melody_Reload+0, #low(B3_KEY)
0311 C002       372            push AR2
0313 7A78       372            mov R2, #120
0315 12002E     372            lcall ?Wait_Milli_Seconds
0318 D002       372            pop AR2
031A            373   
031A 75336C     374            mov Melody_Reload+1, #high(A3_KEY)
031D 7532A1     375            mov Melody_Reload+0, #low(A3_KEY)
0320 C002       376            push AR2
0322 7A78       376            mov R2, #120
0324 12002E     376            lcall ?Wait_Milli_Seconds
0327 D002       376            pop AR2
0329            377   
0329 753363     378            mov Melody_Reload+1, #high(Gs3_KEY)
032C 7532C0     379            mov Melody_Reload+0, #low(Gs3_KEY)
032F C002       380            push AR2
0331 7A78       380            mov R2, #120
0333 12002E     380            lcall ?Wait_Milli_Seconds
0336 D002       380            pop AR2
0338            381            
0338 75336C     382            mov Melody_Reload+1, #high(A3_KEY)
033B 7532A1     383            mov Melody_Reload+0, #low(A3_KEY)
033E C002       384            push AR2
0340 7A78       384            mov R2, #120
0342 12002E     384            lcall ?Wait_Milli_Seconds
0345 D002       384            pop AR2
0347            385   
0347 12029E     386            lcall clear_screen_func
034A            387   ;----------------------------------------
034A 12025C     388            lcall Display_special_char2
034D            389   
034D 753384     390            mov Melody_Reload+1, #high(C4_KEY)
0350 753205     391            mov Melody_Reload+0, #low(C4_KEY)
0353 C002       392            push AR2
0355 7AF0       392            mov R2, #240
0357 12002E     392            lcall ?Wait_Milli_Seconds
035A D002       392            pop AR2
035C C002       393            push AR2
035E 7AF0       393            mov R2, #240
0360 12002E     393            lcall ?Wait_Milli_Seconds
0363 D002       393            pop AR2
0365            394            
0365 12029E     395       lcall clear_screen_func
0368 12021A     396       lcall Display_special_char1
036B            397       
036B 753384     398            mov Melody_Reload+1, #high(D4_KEY)
036E 753205     399            mov Melody_Reload+0, #low(D4_KEY)
0371 C002       400            push AR2
0373 7A78       400            mov R2, #120
0375 12002E     400            lcall ?Wait_Milli_Seconds
0378 D002       400            pop AR2
037A            401   
037A 753384     402            mov Melody_Reload+1, #high(C4_KEY)
037D 753205     403            mov Melody_Reload+0, #low(C4_KEY)
0380 C002       404            push AR2
0382 7A78       404            mov R2, #120
0384 12002E     404            lcall ?Wait_Milli_Seconds
0387 D002       404            pop AR2
0389            405   
0389 7533BE     406            mov Melody_Reload+1, #high(B4_KEY)
038C 75325F     407            mov Melody_Reload+0, #low(B4_KEY)
038F C002       408            push AR2
0391 7A78       408            mov R2, #120
0393 12002E     408            lcall ?Wait_Milli_Seconds
0396 D002       408            pop AR2
0398            409   
0398 7533C2     410            mov Melody_Reload+1, #high(C5_KEY)
039B 753212     411            mov Melody_Reload+0, #low(C5_KEY)
039E C002       412            push AR2
03A0 7A78       412            mov R2, #120
03A2 12002E     412            lcall ?Wait_Milli_Seconds
03A5 D002       412            pop AR2
03A7            413   
03A7 12029E     414            lcall clear_screen_func
03AA 12025C     415       lcall Display_special_char2
03AD            416            
03AD 7533CE     417            mov Melody_Reload+1, #high(E5_KEY)
03B0 7532D7     418            mov Melody_Reload+0, #low(E5_KEY)
03B3 C002       419            push AR2
03B5 7AF0       419            mov R2, #240
03B7 12002E     419            lcall ?Wait_Milli_Seconds
03BA D002       419            pop AR2
03BC C002       420            push AR2
03BE 7AF0       420            mov R2, #240
03C0 12002E     420            lcall ?Wait_Milli_Seconds
03C3 D002       420            pop AR2
03C5            421   
03C5 12029E     422            lcall clear_screen_func
03C8 12021A     423       lcall Display_special_char1
03CB            424   ;-----------------------------------------
03CB 7533D1     425            mov Melody_Reload+1, #high(F5_KEY)
03CE 753296     426            mov Melody_Reload+0, #low(F5_KEY)
03D1 C002       427            push AR2
03D3 7A78       427            mov R2, #120
03D5 12002E     427            lcall ?Wait_Milli_Seconds
03D8 D002       427            pop AR2
03DA            428   
03DA 7533CE     429            mov Melody_Reload+1, #high(E5_KEY)
03DD 7532D7     430            mov Melody_Reload+0, #low(E5_KEY)
03E0 C002       431            push AR2
03E2 7A78       431            mov R2, #120
03E4 12002E     431            lcall ?Wait_Milli_Seconds
03E7 D002       431            pop AR2
03E9            432   
03E9 7533CB     433            mov Melody_Reload+1, #high(Ds5_KEY)
03EC 7532EB     434            mov Melody_Reload+0, #low(Ds5_KEY)
03EF C002       435            push AR2
03F1 7A78       435            mov R2, #120
03F3 12002E     435            lcall ?Wait_Milli_Seconds
03F6 D002       435            pop AR2
03F8            436   
03F8 7533CE     437            mov Melody_Reload+1, #high(E5_KEY)
03FB 7532D7     438            mov Melody_Reload+0, #low(E5_KEY)
03FE C002       439            push AR2
0400 7A78       439            mov R2, #120
0402 12002E     439            lcall ?Wait_Milli_Seconds
0405 D002       439            pop AR2
0407            440   
0407 12029E     441            lcall clear_screen_func
040A 12025C     442       lcall Display_special_char2
040D            443   ;-----------------------------------------
040D 7533DF     444            mov Melody_Reload+1, #high(B5_KEY)
0410 753230     445            mov Melody_Reload+0, #low(B5_KEY)
0413 C002       446            push AR2
0415 7A78       446            mov R2, #120
0417 12002E     446            lcall ?Wait_Milli_Seconds
041A D002       446            pop AR2
041C            447   
041C 7533DB     448            mov Melody_Reload+1, #high(A5_KEY)
041F 753229     449            mov Melody_Reload+0, #low(A5_KEY)
0422 C002       450            push AR2
0424 7A78       450            mov R2, #120
0426 12002E     450            lcall ?Wait_Milli_Seconds
0429 D002       450            pop AR2
042B            451   
042B 7533D8     452            mov Melody_Reload+1, #high(Gs5_KEY)
042E 7532F7     453            mov Melody_Reload+0, #low(Gs5_KEY)
0431 C002       454            push AR2
0433 7A78       454            mov R2, #120
0435 12002E     454            lcall ?Wait_Milli_Seconds
0438 D002       454            pop AR2
043A            455   
043A 7533DB     456            mov Melody_Reload+1, #high(A5_KEY)
043D 753229     457            mov Melody_Reload+0, #low(A5_KEY)
0440 C002       458            push AR2
0442 7A78       458            mov R2, #120
0444 12002E     458            lcall ?Wait_Milli_Seconds
0447 D002       458            pop AR2
0449            459   
0449 12029E     460            lcall clear_screen_func
044C 12021A     461       lcall Display_special_char1
044F            462   ;--------------------------------------
044F 7533DF     463            mov Melody_Reload+1, #high(B5_KEY)
0452 753230     464            mov Melody_Reload+0, #low(B5_KEY)
0455 C002       465            push AR2
0457 7A78       465            mov R2, #120
0459 12002E     465            lcall ?Wait_Milli_Seconds
045C D002       465            pop AR2
045E            466   
045E 7533DB     467            mov Melody_Reload+1, #high(A5_KEY)
0461 753229     468            mov Melody_Reload+0, #low(A5_KEY)
0464 C002       469            push AR2
0466 7A78       469            mov R2, #120
0468 12002E     469            lcall ?Wait_Milli_Seconds
046B D002       469            pop AR2
046D            470   
046D 7533D8     471            mov Melody_Reload+1, #high(Gs5_KEY)
0470 7532F7     472            mov Melody_Reload+0, #low(Gs5_KEY)
0473 C002       473            push AR2
0475 7A78       473            mov R2, #120
0477 12002E     473            lcall ?Wait_Milli_Seconds
047A D002       473            pop AR2
047C            474   
047C 7533DB     475            mov Melody_Reload+1, #high(A5_KEY)
047F 753229     476            mov Melody_Reload+0, #low(A5_KEY)
0482 C002       477            push AR2
0484 7A78       477            mov R2, #120
0486 12002E     477            lcall ?Wait_Milli_Seconds
0489 D002       477            pop AR2
048B            478   
048B 12029E     479            lcall clear_screen_func
048E 12025C     480       lcall Display_special_char2
0491            481   
0491 7533E1     482            mov Melody_Reload+1, #high(C6_KEY)
0494 753205     483            mov Melody_Reload+0, #low(C6_KEY)
0497 C002       484            push AR2
0499 7AF0       484            mov R2, #240
049B 12002E     484            lcall ?Wait_Milli_Seconds
049E D002       484            pop AR2
04A0 C002       485            push AR2
04A2 7AF0       485            mov R2, #240
04A4 12002E     485            lcall ?Wait_Milli_Seconds
04A7 D002       485            pop AR2
04A9            486            
04A9 12029E     487            lcall clear_screen_func
04AC 12021A     488       lcall Display_special_char1
04AF            489   ;----------------------------------------
04AF 7533DB     490            mov Melody_Reload+1, #high(A5_KEY)
04B2 753229     491            mov Melody_Reload+0, #low(A5_KEY)
04B5 C002       492            push AR2
04B7 7AF0       492            mov R2, #240
04B9 12002E     492            lcall ?Wait_Milli_Seconds
04BC D002       492            pop AR2
04BE            493   
04BE 7533E1     494            mov Melody_Reload+1, #high(C6_KEY)
04C1 753205     495            mov Melody_Reload+0, #low(C6_KEY)
04C4 C002       496            push AR2
04C6 7AF0       496            mov R2, #240
04C8 12002E     496            lcall ?Wait_Milli_Seconds
04CB D002       496            pop AR2
04CD            497   
04CD 12029E     498            lcall clear_screen_func
04D0 12025C     499       lcall Display_special_char2
04D3            500   ;-----------------------------------------
04D3 7533DF     501            mov Melody_Reload+1, #high(B5_KEY)
04D6 753230     502            mov Melody_Reload+0, #low(B5_KEY)
04D9 C002       503            push AR2
04DB 7AF0       503            mov R2, #240
04DD 12002E     503            lcall ?Wait_Milli_Seconds
04E0 D002       503            pop AR2
04E2            504   
04E2 7533DB     505            mov Melody_Reload+1, #high(A5_KEY)
04E5 753229     506            mov Melody_Reload+0, #low(A5_KEY)
04E8 C002       507            push AR2
04EA 7AF0       507            mov R2, #240
04EC 12002E     507            lcall ?Wait_Milli_Seconds
04EF D002       507            pop AR2
04F1            508   
04F1 12029E     509            lcall clear_screen_func
04F4 12021A     510       lcall Display_special_char1
04F7            511   
04F7 7533D6     512            mov Melody_Reload+1, #high(G5_KEY)
04FA 753229     513            mov Melody_Reload+0, #low(A5_KEY)
04FD C002       514            push AR2
04FF 7AF0       514            mov R2, #240
0501 12002E     514            lcall ?Wait_Milli_Seconds
0504 D002       514            pop AR2
0506            515   
0506 7533DB     516            mov Melody_Reload+1, #high(A5_KEY)
0509 753229     517            mov Melody_Reload+0, #low(A5_KEY)
050C C002       518            push AR2
050E 7AF0       518            mov R2, #240
0510 12002E     518            lcall ?Wait_Milli_Seconds
0513 D002       518            pop AR2
0515            519   
0515 12029E     520            lcall clear_screen_func
0518 12025C     521       lcall Display_special_char2
051B            522   ;-----------------------------------------
051B 7533DF     523            mov Melody_Reload+1, #high(B5_KEY)
051E 753230     524            mov Melody_Reload+0, #low(B5_KEY)
0521 C002       525            push AR2
0523 7AF0       525            mov R2, #240
0525 12002E     525            lcall ?Wait_Milli_Seconds
0528 D002       525            pop AR2
052A            526   
052A 7533DB     527            mov Melody_Reload+1, #high(A5_KEY)
052D 753229     528            mov Melody_Reload+0, #low(A5_KEY)
0530 C002       529            push AR2
0532 7AF0       529            mov R2, #240
0534 12002E     529            lcall ?Wait_Milli_Seconds
0537 D002       529            pop AR2
0539            530   
0539 12029E     531            lcall clear_screen_func
053C 12021A     532       lcall Display_special_char1
053F            533   
053F 7533D6     534            mov Melody_Reload+1, #high(G5_KEY)
0542 753229     535            mov Melody_Reload+0, #low(A5_KEY)
0545 C002       536            push AR2
0547 7AF0       536            mov R2, #240
0549 12002E     536            lcall ?Wait_Milli_Seconds
054C D002       536            pop AR2
054E            537   
054E 7533DB     538            mov Melody_Reload+1, #high(A5_KEY)
0551 753229     539            mov Melody_Reload+0, #low(A5_KEY)
0554 C002       540            push AR2
0556 7AF0       540            mov R2, #240
0558 12002E     540            lcall ?Wait_Milli_Seconds
055B D002       540            pop AR2
055D            541   
055D 12029E     542            lcall clear_screen_func
0560 12025C     543       lcall Display_special_char2
0563            544   ;-----------------------------------------
0563 7533DF     545            mov Melody_Reload+1, #high(B5_KEY)
0566 753230     546            mov Melody_Reload+0, #low(B5_KEY)
0569 C002       547            push AR2
056B 7AF0       547            mov R2, #240
056D 12002E     547            lcall ?Wait_Milli_Seconds
0570 D002       547            pop AR2
0572            548   
0572 7533DB     549            mov Melody_Reload+1, #high(A5_KEY)
0575 753229     550            mov Melody_Reload+0, #low(A5_KEY)
0578 C002       551            push AR2
057A 7AF0       551            mov R2, #240
057C 12002E     551            lcall ?Wait_Milli_Seconds
057F D002       551            pop AR2
0581            552   
0581 12029E     553            lcall clear_screen_func
0584 12021A     554       lcall Display_special_char1
0587            555   
0587 7533D6     556            mov Melody_Reload+1, #high(G5_KEY)
058A 753229     557            mov Melody_Reload+0, #low(A5_KEY)
058D C002       558            push AR2
058F 7AF0       558            mov R2, #240
0591 12002E     558            lcall ?Wait_Milli_Seconds
0594 D002       558            pop AR2
0596            559            
0596 7533D4     560            mov Melody_Reload+1, #high(Fs5_KEY)
0599 753230     561            mov Melody_Reload+0, #low(Fs5_KEY)
059C C002       562            push AR2
059E 7AF0       562            mov R2, #240
05A0 12002E     562            lcall ?Wait_Milli_Seconds
05A3 D002       562            pop AR2
05A5            563   
05A5 12029E     564            lcall clear_screen_func
05A8 12025C     565       lcall Display_special_char2
05AB            566   
05AB 7533CE     567            mov Melody_Reload+1, #high(E5_KEY)
05AE 7532D7     568            mov Melody_Reload+0, #low(E5_KEY)
05B1 C002       569            push AR2
05B3 7AF0       569            mov R2, #240
05B5 12002E     569            lcall ?Wait_Milli_Seconds
05B8 D002       569            pop AR2
05BA C002       570            push AR2
05BC 7AF0       570            mov R2, #240
05BE 12002E     570            lcall ?Wait_Milli_Seconds
05C1 D002       570            pop AR2
05C3            571   
05C3 12029E     572            lcall clear_screen_func
05C6 12021A     573       lcall Display_special_char1
05C9            574   
05C9            575   forever:
05C9 C28C       576            clr TR0
05CB 80FC       577            sjmp forever
05CD            578   END
