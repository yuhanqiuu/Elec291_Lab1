                  2   $LIST
0000              4   
0000              5   ;  N76E003 pinout:
0000              6   ;                               -------
0000              7   ;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
0000              8   ;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
0000              9   ;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
0000             10   ;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
0000             11   ;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
0000             12   ;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
0000             13   ;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
0000             14   ;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
0000             15   ;                         VDD -|9    12|- P1.3/SCL/[STADC]
0000             16   ;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
0000             17   ;                               -------
0000             18   ;
0000             19   
0000             20   CLK           EQU 16600000 ; Microcontroller system frequency in Hz
0000             21   TIMER0_RATE   EQU 2048     ; 2048Hz squarewave (peak amplitude of CEM-1203 speaker)
0000             22   TIMER0_RELOAD EQU ((65536-(CLK/TIMER0_RATE)))
0000             23   
0000             24   ;---------------------------------;
0000             25   ; Key board                       ;
0000             26   ;---------------------------------;
0000             27   C3_RATE equ 262
0000             28   C3_KEY EQU ((65536-(CLK/C3_RATE)))
0000             29   D3_RATE equ 294
0000             30   D3_KEY EQU ((65536-(CLK/D3_RATE)))
0000             31   B3_RATE equ 494
0000             32   B3_KEY EQU ((65536-(CLK/B3_RATE)))
0000             33   Gs3_RATE equ 415
0000             34   Gs3_KEY EQU ((65536-(CLK/Gs3_RATE)))
0000             35   A3_RATE equ 440
0000             36   A3_KEY EQU ((65536-(CLK/A3_RATE)))
0000             37   
0000             38   C4_RATE equ 523
0000             39   C4_KEY EQU ((65536-(CLK/C4_RATE)))
0000             40   D4_RATE equ 587
0000             41   D4_KEY EQU ((65536-(CLK/C4_RATE)))
0000             42   E4_RATE equ 479
0000             43   E4_KEY EQU ((65536-(CLK/E4_RATE)))
0000             44   Gs4_RATE equ 831
0000             45   Gs4_KEY EQU ((65536-(CLK/Gs4_RATE)))
0000             46   A4_RATE equ 880
0000             47   A4_KEY EQU ((65536-(CLK/A4_RATE)))
0000             48   B4_RATE equ 988
0000             49   B4_KEY EQU ((65536-(CLK/B4_RATE)))
0000             50   
0000             51   C5_RATE equ 1047
0000             52   C5_KEY EQU ((65536-(CLK/C5_RATE)))
0000             53   D5_RATE equ 1175
0000             54   D5_KEY EQU ((65536-(CLK/D5_RATE)))
0000             55   Ds5_RATE equ 1245
0000             56   Ds5_KEY EQU ((65536-(CLK/Ds5_RATE)))
0000             57   E5_RATE equ 1319
0000             58   E5_KEY EQU ((65536-(CLK/E5_RATE)))
0000             59   F5_RATE equ 1397
0000             60   F5_KEY EQU ((65536-(CLK/F5_RATE)))
0000             61   Fs5_RATE equ 1480
0000             62   Fs5_KEY EQU ((65536-(CLK/Fs5_RATE)))
0000             63   G5_RATE equ 1568
0000             64   G5_KEY EQU ((65536-(CLK/G5_RATE)))
0000             65   Gs5_RATE equ 1661
0000             66   Gs5_KEY EQU ((65536-(CLK/Gs5_RATE)))
0000             67   A5_RATE equ 1760
0000             68   A5_KEY EQU ((65536-(CLK/A5_RATE)))
0000             69   B5_RATE equ 1976
0000             70   B5_KEY EQU ((65536-(CLK/B5_RATE)))
0000             71   
0000             72   C6_RATE equ 2093
0000             73   C6_KEY EQU ((65536-(CLK/C6_RATE)))
0000             74   E6_RATE equ 2637
0000             75   E6_KEY EQU ((65536-(CLK/E6_RATE)))
0000             76   MUTE_KEY EQU 0
0000             77   ;----------------------------------
0000             78   SOUND_OUT     equ P1.7
0000             79   
0000             80   ; Reset vector
0000             81   org 0x0000
0000 0202A4      82       ljmp main
0003             83   
0003             84   ; External interrupt 0 vector (not used in this code)
0003             85   org 0x0003
0003 32          86            reti
0004             87   
0004             88   ; Timer/Counter 0 overflow interrupt vector
000B             89   org 0x000B
000B 020126      90            ljmp Timer0_ISR
000E             91   
000E             92   ; External interrupt 1 vector (not used in this code)
0013             93   org 0x0013
0013 32          94            reti
0014             95   
0014             96   ; Timer/Counter 1 overflow interrupt vector (not used in this code)
001B             97   org 0x001B
001B 32          98            reti
001C             99   
001C            100   ; Serial port receive/transmit interrupt vector (not used in this code)
0023            101   org 0x0023 
0023 32         102            reti
0024            103   
0024            104   
0024            105   ; In the 8051 we can define direct access variables starting at location 0x30 up to location 0x7F
0030            106   dseg at 0x30
0030            107   Count1ms:     ds 2 ; Used to determine when half second has passed
0032            108   Melody_Reload: ds 2
0034            109   ; In the 8051 we have variables that are 1-bit in size.  We can use the setb, clr, jb, and jnb
0034            110   ; instructions with these variables.  This is how you define a 1-bit variable:
0000            111   bseg
0000            112   half_seconds_flag: dbit 1 ; Set to one in the ISR every time 500 ms had passed
0001            113   
0024            114   cseg
0024            115   ; These 'equ' must match the hardware wiring
0024            116   LCD_RS equ P1.3
0024            117   ;LCD_RW equ PX.X ; Not used in this code, connect the pin to GND
0024            118   LCD_E  equ P1.4
0024            119   LCD_D4 equ P0.0
0024            120   LCD_D5 equ P0.1
0024            121   LCD_D6 equ P0.2
0024            122   LCD_D7 equ P0.3
0024            123   
                125   $LIST
00F6            127   
00F6            128   ;                     1234567890123456    <- This helps determine the location of the counter
00F6 20203E4D   129   Initial_Message:  db '  >Music Test<  ', 0
     75736963
     20546573
     743C2020
     00
0107 20202020   130   clear_screen:      db '                ', 0
     20202020
     20202020
     20202020
     00
0118            131   ;---------------------------------;
0118            132   ; Routine to initialize the ISR   ;
0118            133   ; for timer 0                     ;
0118            134   ;---------------------------------;
0118            135   Timer0_Init:
0118 438E08     136            orl CKCON, #0b00001000 ; Input for timer 0 is sysclk/1
011B E589       137            mov a, TMOD
011D 54F0       138            anl a, #0xf0 ; 11110000 Clear the bits for timer 0
011F 4401       139            orl a, #0x01 ; 00000001 Configure timer 0 as 16-timer
0121 F589       140            mov TMOD, a
0123            141            ;mov TH0, #high(B3_KEY)
0123            142            ;mov TL0, #low(B3_KEY)
0123            143            ; Enable the timer and interrupts
0123            144       ;setb ET0  ; Enable timer 0 interrupt
0123 D28C       145       setb TR0  ; Start timer 0
0125 22         146            ret
0126            147   
0126            148   ;---------------------------------;
0126            149   ; ISR for timer 0.  Set to execute;
0126            150   ; every 1/4096Hz to generate a    ;
0126            151   ; 2048 Hz wave at pin SOUND_OUT   ;
0126            152   ;---------------------------------;
0126            153   Timer0_ISR:
0126            154            ;clr TF0  ; According to the data sheet this is done for us already.
0126            155            ; Timer 0 doesn't have 16-bit auto-reload, so
0126 C28C       156            clr TR0
0128            157            ;mov TH0, #high(TIMER0_RELOAD)
0128            158            ;mov TL0, #low(TIMER0_RELOAD)
0128 85338C     159            mov TH0, Melody_Reload+1
012B 85328A     160            mov TL0, Melody_Reload+0
012E D28C       161            setb TR0
0130 B297       162            cpl SOUND_OUT ; Connect speaker the pin assigned to 'SOUND_OUT'!
0132 32         163            reti
0133            164   
0133            165   double_eighth:
0133 7448       166       mov   A,#48H         ;Load the location where we want to store
0135 120078     167       lcall ?WriteCommand    ;Send the command
0138 7400       168       mov   A,#00H         ;Load row 1 data
013A 120073     169       lcall ?WriteData   ;Send the data
013D 740F       170       mov   A,#0FH         ;Load row 2 data
013F 120073     171       lcall ?WriteData   ;Send the data
0142 7409       172       mov   A,#09H         ;Load row 3 data
0144 120073     173       lcall ?WriteData   ;Send the data
0147 7409       174       mov   A,#09H         ;Load row 4 data
0149 120073     175       lcall ?WriteData   ;Send the data
014C 741B       176       mov   A,#1BH         ;Load row 5 data
014E 120073     177       lcall ?WriteData   ;Send the data
0151 741B       178       mov   A,#1BH         ;Load row 6 data
0153 120073     179       lcall ?WriteData   ;Send the data
0156 7400       180       mov   A,#00H         ;Load row 7 data
0158 1173       181       acall ?WriteData   ;Send the data
015A 7400       182       mov   A,#00H         ;Load row 8 data
015C 120073     183       lcall ?WriteData   ;Send the data
015F 22         184       ret                  ;Return from routine
0160            185       
0160            186   eighth:
0160 7450       187       mov   A,#50H         ;Load the location where we want to store
0162 120078     188       lcall ?WriteCommand    ;Send the command
0165 7404       189       mov   A,#04H         ;Load row 1 data
0167 120073     190       lcall ?WriteData   ;Send the data
016A 7406       191       mov   A,#06H         ;Load row 2 data
016C 120073     192       lcall ?WriteData   ;Send the data
016F 7405       193       mov   A,#05H         ;Load row 3 data
0171 120073     194       lcall ?WriteData   ;Send the data
0174 7404       195       mov   A,#04H         ;Load row 4 data
0176 120073     196       lcall ?WriteData   ;Send the data
0179 740C       197       mov   A,#0CH         ;Load row 5 data
017B 120073     198       lcall ?WriteData   ;Send the data
017E 7414       199       mov   A,#14H         ;Load row 6 data
0180 120073     200       lcall ?WriteData   ;Send the data
0183 7408       201       mov   A,#08H         ;Load row 7 data
0185 1173       202       acall ?WriteData   ;Send the data
0187 7400       203       mov   A,#00H         ;Load row 8 data
0189 120073     204       lcall ?WriteData   ;Send the data
018C 22         205       ret                  ;Return from routine
018D            206   
018D            207   heart:
018D 7458       208       mov   A,#58H         ;Load the location where we want to store
018F 120078     209       lcall ?WriteCommand    ;Send the command
0192 7400       210       mov   A,#00H         ;Load row 1 data
0194 120073     211       lcall ?WriteData   ;Send the data
0197 740A       212       mov   A,#0AH         ;Load row 2 data
0199 120073     213       lcall ?WriteData   ;Send the data
019C 7415       214       mov   A,#15H         ;Load row 3 data
019E 120073     215       lcall ?WriteData   ;Send the data
01A1 7411       216       mov   A,#11H         ;Load row 4 data
01A3 120073     217       lcall ?WriteData   ;Send the data
01A6 7411       218       mov   A,#11H         ;Load row 5 data
01A8 120073     219       lcall ?WriteData   ;Send the data
01AB 740A       220       mov   A,#0AH         ;Load row 6 data
01AD 120073     221       lcall ?WriteData   ;Send the data
01B0 7404       222       mov   A,#04H         ;Load row 7 data
01B2 1173       223       acall ?WriteData   ;Send the data
01B4 7400       224       mov   A,#00H         ;Load row 8 data
01B6 120073     225       lcall ?WriteData   ;Send the data
01B9 22         226       ret                  ;Return from routine
01BA            227   bell:
01BA 7460       228       mov   A,#60H         ;Load the location where we want to store
01BC 120078     229       lcall ?WriteCommand    ;Send the command
01BF 7400       230       mov   A,#00H         ;Load row 1 data
01C1 120073     231       lcall ?WriteData   ;Send the data
01C4 7404       232       mov   A,#04H          ;Load row 2 data
01C6 120073     233       lcall ?WriteData   ;Send the data
01C9 740E       234       mov   A,#0eH          ;Load row 3 data
01CB 120073     235       lcall ?WriteData   ;Send the data
01CE 740E       236       mov   A,#0eH         ;Load row 4 data
01D0 120073     237       lcall ?WriteData   ;Send the data
01D3 740E       238       mov   A,#0eH         ;Load row 5 data
01D5 120073     239       lcall ?WriteData   ;Send the data
01D8 741F       240       mov   A,#1fH         ;Load row 6 data
01DA 120073     241       lcall ?WriteData   ;Send the data
01DD 7400       242       mov   A,#00H         ;Load row 7 data
01DF 1173       243       acall ?WriteData   ;Send the data
01E1 7404       244       mov   A,#04H         ;Load row 8 data
01E3 120073     245       lcall ?WriteData   ;Send the data
01E6 22         246       ret                  ;Return from routine
01E7            247   
01E7            248            
01E7            249   Display_special_char1:
01E7 12018D     250            lcall heart
01EA 7481       251            mov a, #0x81
01EC 120078     252            lcall ?WriteCommand
01EF 7403       253            mov a, #3H
01F1 120073     254            lcall ?WriteData
01F4            255   
01F4 120160     256            lcall eighth
01F7 74C4       257            mov a, #0xC4
01F9 120078     258            lcall ?WriteCommand
01FC 7402       259            mov a, #2H
01FE 120073     260            lcall ?WriteData
0201            261   
0201 1201BA     262            lcall bell
0204 7487       263            mov a, #0x87
0206 120078     264            lcall ?WriteCommand
0209 7404       265            mov a, #4H
020B 120073     266            lcall ?WriteData
020E            267   
020E 120133     268            lcall double_eighth
0211 74CA       269            mov a, #0xCA
0213 120078     270            lcall ?WriteCommand
0216 7401       271            mov a, #1H
0218 120073     272            lcall ?WriteData
021B            273   
021B 12018D     274            lcall heart
021E 748D       275            mov a, #0x8D
0220 120078     276            lcall ?WriteCommand
0223 7403       277            mov a, #3H
0225 120073     278            lcall ?WriteData
0228 32         279            reti
0229            280            
0229            281   Display_special_char2:
0229 12018D     282            lcall heart
022C 74C0       283            mov a, #0xC0
022E 120078     284            lcall ?WriteCommand
0231 7403       285            mov a, #3H
0233 120073     286            lcall ?WriteData
0236            287   
0236 120160     288            lcall eighth
0239 7483       289            mov a, #0x83
023B 120078     290            lcall ?WriteCommand
023E 7402       291            mov a, #2H
0240 120073     292            lcall ?WriteData
0243            293   
0243 1201BA     294            lcall bell
0246 74C7       295            mov a, #0xC7
0248 120078     296            lcall ?WriteCommand
024B 7404       297            mov a, #4H
024D 120073     298            lcall ?WriteData
0250            299   
0250 120133     300            lcall double_eighth
0253 748B       301            mov a, #0x8B
0255 120078     302            lcall ?WriteCommand
0258 7401       303            mov a, #1H
025A 120073     304            lcall ?WriteData
025D            305   
025D 12018D     306            lcall heart
0260 74CE       307            mov a, #0xCE
0262 120078     308            lcall ?WriteCommand
0265 7403       309            mov a, #3H
0267 120073     310            lcall ?WriteData
026A 32         311            reti
026B            312   
026B            313   clear_screen_func:
026B            314       
026B C0E0       315            push acc
026D 7401       315            mov a, #1
026F 14         315            dec a
0270 1200BD     315            lcall ?Set_Cursor_1 ; Select column and row
0273 D0E0       315            pop acc
0275 C083       316            push dph
0277 C082       316            push dpl
0279 C0E0       316            push acc
027B 900107     316            mov dptr, #clear_screen
027E 1200B0     316            lcall ?Send_Constant_String
0281 D0E0       316            pop acc
0283 D082       316            pop dpl
0285 D083       316            pop dph
0287 C0E0       317            push acc
0289 7401       317            mov a, #1
028B 14         317            dec a
028C 1200BB     317            lcall ?Set_Cursor_2 ; Select column and row
028F D0E0       317            pop acc
0291 C083       318            push dph
0293 C082       318            push dpl
0295 C0E0       318            push acc
0297 900107     318            mov dptr, #clear_screen
029A 1200B0     318            lcall ?Send_Constant_String
029D D0E0       318            pop acc
029F D082       318            pop dpl
02A1 D083       318            pop dph
02A3 22         319       ret
02A4            320       
02A4            321   ;---------------------------------;
02A4            322   ; Main program. Includes hardware ;
02A4            323   ; initialization and 'forever'    ;
02A4            324   ; loop.                           ;
02A4            325   ;---------------------------------;
02A4            326   main:
02A4            327            ; Initialization
02A4 75817F     328       mov SP, #0x7F
02A7 75B100     329       mov P0M1, #0x00
02AA 75B200     330       mov P0M2, #0x00
02AD 75B300     331       mov P1M1, #0x00
02B0 75B400     332       mov P1M2, #0x00
02B3 75AD00     333       mov P3M2, #0x00
02B6 75AD00     334       mov P3M2, #0x00
02B9            335       
02B9 D2AF       336       setb EA   ; Enable Global interrupts
02BB 12007D     337       lcall LCD_4BIT
02BE C083       338            push dph
02C0 C082       338            push dpl
02C2 C0E0       338            push acc
02C4 9000F6     338            mov dptr, #Initial_Message
02C7 1200B0     338            lcall ?Send_Constant_String
02CA D0E0       338            pop acc
02CC D082       338            pop dpl
02CE D083       338            pop dph
02D0            339   
02D0            340   Turkish_March:
02D0 D2A9       341            setb ET0
02D2            342   
02D2            343       ;lcall Display_special_char1
02D2            344   
02D2 75337C     345            mov Melody_Reload+1, #high(B3_KEY)
02D5 7532BD     346            mov Melody_Reload+0, #low(B3_KEY)
02D8 C002       347            push AR2
02DA 7A78       347            mov R2, #120
02DC 12002E     347            lcall ?Wait_Milli_Seconds
02DF D002       347            pop AR2
02E1            348   
02E1 75336C     349            mov Melody_Reload+1, #high(A3_KEY)
02E4 7532A1     350            mov Melody_Reload+0, #low(A3_KEY)
02E7 C002       351            push AR2
02E9 7A78       351            mov R2, #120
02EB 12002E     351            lcall ?Wait_Milli_Seconds
02EE D002       351            pop AR2
02F0            352   
02F0 753363     353            mov Melody_Reload+1, #high(Gs3_KEY)
02F3 7532C0     354            mov Melody_Reload+0, #low(Gs3_KEY)
02F6 C002       355            push AR2
02F8 7A78       355            mov R2, #120
02FA 12002E     355            lcall ?Wait_Milli_Seconds
02FD D002       355            pop AR2
02FF            356            
02FF 75336C     357            mov Melody_Reload+1, #high(A3_KEY)
0302 7532A1     358            mov Melody_Reload+0, #low(A3_KEY)
0305 C002       359            push AR2
0307 7A78       359            mov R2, #120
0309 12002E     359            lcall ?Wait_Milli_Seconds
030C D002       359            pop AR2
030E            360   
030E 12026B     361            lcall clear_screen_func
0311            362   ;----------------------------------------
0311 120229     363            lcall Display_special_char2
0314            364   
0314 753384     365            mov Melody_Reload+1, #high(C4_KEY)
0317 753205     366            mov Melody_Reload+0, #low(C4_KEY)
031A C002       367            push AR2
031C 7AF0       367            mov R2, #240
031E 12002E     367            lcall ?Wait_Milli_Seconds
0321 D002       367            pop AR2
0323 C002       368            push AR2
0325 7AF0       368            mov R2, #240
0327 12002E     368            lcall ?Wait_Milli_Seconds
032A D002       368            pop AR2
032C            369            
032C 12026B     370       lcall clear_screen_func
032F 1201E7     371       lcall Display_special_char1
0332            372       
0332 753384     373            mov Melody_Reload+1, #high(D4_KEY)
0335 753205     374            mov Melody_Reload+0, #low(D4_KEY)
0338 C002       375            push AR2
033A 7A78       375            mov R2, #120
033C 12002E     375            lcall ?Wait_Milli_Seconds
033F D002       375            pop AR2
0341            376   
0341 753384     377            mov Melody_Reload+1, #high(C4_KEY)
0344 753205     378            mov Melody_Reload+0, #low(C4_KEY)
0347 C002       379            push AR2
0349 7A78       379            mov R2, #120
034B 12002E     379            lcall ?Wait_Milli_Seconds
034E D002       379            pop AR2
0350            380   
0350 7533BE     381            mov Melody_Reload+1, #high(B4_KEY)
0353 75325F     382            mov Melody_Reload+0, #low(B4_KEY)
0356 C002       383            push AR2
0358 7A78       383            mov R2, #120
035A 12002E     383            lcall ?Wait_Milli_Seconds
035D D002       383            pop AR2
035F            384   
035F 7533C2     385            mov Melody_Reload+1, #high(C5_KEY)
0362 753212     386            mov Melody_Reload+0, #low(C5_KEY)
0365 C002       387            push AR2
0367 7A78       387            mov R2, #120
0369 12002E     387            lcall ?Wait_Milli_Seconds
036C D002       387            pop AR2
036E            388   
036E 12026B     389            lcall clear_screen_func
0371 120229     390       lcall Display_special_char2
0374            391            
0374 7533CE     392            mov Melody_Reload+1, #high(E5_KEY)
0377 7532D7     393            mov Melody_Reload+0, #low(E5_KEY)
037A C002       394            push AR2
037C 7AF0       394            mov R2, #240
037E 12002E     394            lcall ?Wait_Milli_Seconds
0381 D002       394            pop AR2
0383 C002       395            push AR2
0385 7AF0       395            mov R2, #240
0387 12002E     395            lcall ?Wait_Milli_Seconds
038A D002       395            pop AR2
038C            396   
038C 12026B     397            lcall clear_screen_func
038F 1201E7     398       lcall Display_special_char1
0392            399   ;-----------------------------------------
0392 7533D1     400            mov Melody_Reload+1, #high(F5_KEY)
0395 753296     401            mov Melody_Reload+0, #low(F5_KEY)
0398 C002       402            push AR2
039A 7A78       402            mov R2, #120
039C 12002E     402            lcall ?Wait_Milli_Seconds
039F D002       402            pop AR2
03A1            403   
03A1 7533CE     404            mov Melody_Reload+1, #high(E5_KEY)
03A4 7532D7     405            mov Melody_Reload+0, #low(E5_KEY)
03A7 C002       406            push AR2
03A9 7A78       406            mov R2, #120
03AB 12002E     406            lcall ?Wait_Milli_Seconds
03AE D002       406            pop AR2
03B0            407   
03B0 7533CB     408            mov Melody_Reload+1, #high(Ds5_KEY)
03B3 7532EB     409            mov Melody_Reload+0, #low(Ds5_KEY)
03B6 C002       410            push AR2
03B8 7A78       410            mov R2, #120
03BA 12002E     410            lcall ?Wait_Milli_Seconds
03BD D002       410            pop AR2
03BF            411   
03BF 7533CE     412            mov Melody_Reload+1, #high(E5_KEY)
03C2 7532D7     413            mov Melody_Reload+0, #low(E5_KEY)
03C5 C002       414            push AR2
03C7 7A78       414            mov R2, #120
03C9 12002E     414            lcall ?Wait_Milli_Seconds
03CC D002       414            pop AR2
03CE            415   
03CE 12026B     416            lcall clear_screen_func
03D1 120229     417       lcall Display_special_char2
03D4            418   ;-----------------------------------------
03D4 7533DF     419            mov Melody_Reload+1, #high(B5_KEY)
03D7 753230     420            mov Melody_Reload+0, #low(B5_KEY)
03DA C002       421            push AR2
03DC 7A78       421            mov R2, #120
03DE 12002E     421            lcall ?Wait_Milli_Seconds
03E1 D002       421            pop AR2
03E3            422   
03E3 7533DB     423            mov Melody_Reload+1, #high(A5_KEY)
03E6 753229     424            mov Melody_Reload+0, #low(A5_KEY)
03E9 C002       425            push AR2
03EB 7A78       425            mov R2, #120
03ED 12002E     425            lcall ?Wait_Milli_Seconds
03F0 D002       425            pop AR2
03F2            426   
03F2 7533D8     427            mov Melody_Reload+1, #high(Gs5_KEY)
03F5 7532F7     428            mov Melody_Reload+0, #low(Gs5_KEY)
03F8 C002       429            push AR2
03FA 7A78       429            mov R2, #120
03FC 12002E     429            lcall ?Wait_Milli_Seconds
03FF D002       429            pop AR2
0401            430   
0401 7533DB     431            mov Melody_Reload+1, #high(A5_KEY)
0404 753229     432            mov Melody_Reload+0, #low(A5_KEY)
0407 C002       433            push AR2
0409 7A78       433            mov R2, #120
040B 12002E     433            lcall ?Wait_Milli_Seconds
040E D002       433            pop AR2
0410            434   
0410 12026B     435            lcall clear_screen_func
0413 1201E7     436       lcall Display_special_char1
0416            437   ;--------------------------------------
0416 7533DF     438            mov Melody_Reload+1, #high(B5_KEY)
0419 753230     439            mov Melody_Reload+0, #low(B5_KEY)
041C C002       440            push AR2
041E 7A78       440            mov R2, #120
0420 12002E     440            lcall ?Wait_Milli_Seconds
0423 D002       440            pop AR2
0425            441   
0425 7533DB     442            mov Melody_Reload+1, #high(A5_KEY)
0428 753229     443            mov Melody_Reload+0, #low(A5_KEY)
042B C002       444            push AR2
042D 7A78       444            mov R2, #120
042F 12002E     444            lcall ?Wait_Milli_Seconds
0432 D002       444            pop AR2
0434            445   
0434 7533D8     446            mov Melody_Reload+1, #high(Gs5_KEY)
0437 7532F7     447            mov Melody_Reload+0, #low(Gs5_KEY)
043A C002       448            push AR2
043C 7A78       448            mov R2, #120
043E 12002E     448            lcall ?Wait_Milli_Seconds
0441 D002       448            pop AR2
0443            449   
0443 7533DB     450            mov Melody_Reload+1, #high(A5_KEY)
0446 753229     451            mov Melody_Reload+0, #low(A5_KEY)
0449 C002       452            push AR2
044B 7A78       452            mov R2, #120
044D 12002E     452            lcall ?Wait_Milli_Seconds
0450 D002       452            pop AR2
0452            453   
0452 12026B     454            lcall clear_screen_func
0455 120229     455       lcall Display_special_char2
0458            456   
0458 7533E1     457            mov Melody_Reload+1, #high(C6_KEY)
045B 753205     458            mov Melody_Reload+0, #low(C6_KEY)
045E C002       459            push AR2
0460 7AF0       459            mov R2, #240
0462 12002E     459            lcall ?Wait_Milli_Seconds
0465 D002       459            pop AR2
0467 C002       460            push AR2
0469 7AF0       460            mov R2, #240
046B 12002E     460            lcall ?Wait_Milli_Seconds
046E D002       460            pop AR2
0470            461            
0470 12026B     462            lcall clear_screen_func
0473 1201E7     463       lcall Display_special_char1
0476            464   ;----------------------------------------
0476 7533DB     465            mov Melody_Reload+1, #high(A5_KEY)
0479 753229     466            mov Melody_Reload+0, #low(A5_KEY)
047C C002       467            push AR2
047E 7AF0       467            mov R2, #240
0480 12002E     467            lcall ?Wait_Milli_Seconds
0483 D002       467            pop AR2
0485            468   
0485 7533E1     469            mov Melody_Reload+1, #high(C6_KEY)
0488 753205     470            mov Melody_Reload+0, #low(C6_KEY)
048B C002       471            push AR2
048D 7AF0       471            mov R2, #240
048F 12002E     471            lcall ?Wait_Milli_Seconds
0492 D002       471            pop AR2
0494            472   
0494 12026B     473            lcall clear_screen_func
0497 120229     474       lcall Display_special_char2
049A            475   ;-----------------------------------------
049A 7533DF     476            mov Melody_Reload+1, #high(B5_KEY)
049D 753230     477            mov Melody_Reload+0, #low(B5_KEY)
04A0 C002       478            push AR2
04A2 7AF0       478            mov R2, #240
04A4 12002E     478            lcall ?Wait_Milli_Seconds
04A7 D002       478            pop AR2
04A9            479   
04A9 7533DB     480            mov Melody_Reload+1, #high(A5_KEY)
04AC 753229     481            mov Melody_Reload+0, #low(A5_KEY)
04AF C002       482            push AR2
04B1 7AF0       482            mov R2, #240
04B3 12002E     482            lcall ?Wait_Milli_Seconds
04B6 D002       482            pop AR2
04B8            483   
04B8 12026B     484            lcall clear_screen_func
04BB 1201E7     485       lcall Display_special_char1
04BE            486   
04BE 7533D6     487            mov Melody_Reload+1, #high(G5_KEY)
04C1 753229     488            mov Melody_Reload+0, #low(A5_KEY)
04C4 C002       489            push AR2
04C6 7AF0       489            mov R2, #240
04C8 12002E     489            lcall ?Wait_Milli_Seconds
04CB D002       489            pop AR2
04CD            490   
04CD 7533DB     491            mov Melody_Reload+1, #high(A5_KEY)
04D0 753229     492            mov Melody_Reload+0, #low(A5_KEY)
04D3 C002       493            push AR2
04D5 7AF0       493            mov R2, #240
04D7 12002E     493            lcall ?Wait_Milli_Seconds
04DA D002       493            pop AR2
04DC            494   
04DC 12026B     495            lcall clear_screen_func
04DF 120229     496       lcall Display_special_char2
04E2            497   ;-----------------------------------------
04E2 7533DF     498            mov Melody_Reload+1, #high(B5_KEY)
04E5 753230     499            mov Melody_Reload+0, #low(B5_KEY)
04E8 C002       500            push AR2
04EA 7AF0       500            mov R2, #240
04EC 12002E     500            lcall ?Wait_Milli_Seconds
04EF D002       500            pop AR2
04F1            501   
04F1 7533DB     502            mov Melody_Reload+1, #high(A5_KEY)
04F4 753229     503            mov Melody_Reload+0, #low(A5_KEY)
04F7 C002       504            push AR2
04F9 7AF0       504            mov R2, #240
04FB 12002E     504            lcall ?Wait_Milli_Seconds
04FE D002       504            pop AR2
0500            505   
0500 12026B     506            lcall clear_screen_func
0503 1201E7     507       lcall Display_special_char1
0506            508   
0506 7533D6     509            mov Melody_Reload+1, #high(G5_KEY)
0509 753229     510            mov Melody_Reload+0, #low(A5_KEY)
050C C002       511            push AR2
050E 7AF0       511            mov R2, #240
0510 12002E     511            lcall ?Wait_Milli_Seconds
0513 D002       511            pop AR2
0515            512   
0515 7533DB     513            mov Melody_Reload+1, #high(A5_KEY)
0518 753229     514            mov Melody_Reload+0, #low(A5_KEY)
051B C002       515            push AR2
051D 7AF0       515            mov R2, #240
051F 12002E     515            lcall ?Wait_Milli_Seconds
0522 D002       515            pop AR2
0524            516   
0524 12026B     517            lcall clear_screen_func
0527 120229     518       lcall Display_special_char2
052A            519   ;-----------------------------------------
052A 7533DF     520            mov Melody_Reload+1, #high(B5_KEY)
052D 753230     521            mov Melody_Reload+0, #low(B5_KEY)
0530 C002       522            push AR2
0532 7AF0       522            mov R2, #240
0534 12002E     522            lcall ?Wait_Milli_Seconds
0537 D002       522            pop AR2
0539            523   
0539 7533DB     524            mov Melody_Reload+1, #high(A5_KEY)
053C 753229     525            mov Melody_Reload+0, #low(A5_KEY)
053F C002       526            push AR2
0541 7AF0       526            mov R2, #240
0543 12002E     526            lcall ?Wait_Milli_Seconds
0546 D002       526            pop AR2
0548            527   
0548 12026B     528            lcall clear_screen_func
054B 1201E7     529       lcall Display_special_char1
054E            530   
054E 7533D6     531            mov Melody_Reload+1, #high(G5_KEY)
0551 753229     532            mov Melody_Reload+0, #low(A5_KEY)
0554 C002       533            push AR2
0556 7AF0       533            mov R2, #240
0558 12002E     533            lcall ?Wait_Milli_Seconds
055B D002       533            pop AR2
055D            534            
055D 7533D4     535            mov Melody_Reload+1, #high(Fs5_KEY)
0560 753230     536            mov Melody_Reload+0, #low(Fs5_KEY)
0563 C002       537            push AR2
0565 7AF0       537            mov R2, #240
0567 12002E     537            lcall ?Wait_Milli_Seconds
056A D002       537            pop AR2
056C            538   
056C 12026B     539            lcall clear_screen_func
056F 120229     540       lcall Display_special_char2
0572            541   
0572 7533CE     542            mov Melody_Reload+1, #high(E5_KEY)
0575 7532D7     543            mov Melody_Reload+0, #low(E5_KEY)
0578 C002       544            push AR2
057A 7AF0       544            mov R2, #240
057C 12002E     544            lcall ?Wait_Milli_Seconds
057F D002       544            pop AR2
0581 C002       545            push AR2
0583 7AF0       545            mov R2, #240
0585 12002E     545            lcall ?Wait_Milli_Seconds
0588 D002       545            pop AR2
058A            546   
058A 12026B     547            lcall clear_screen_func
058D 1201E7     548       lcall Display_special_char1
0590 22         549            ret
0591            550   
0591            551   forever:
0591 C28C       552            clr TR0
0593 80FC       553            sjmp forever
0595            554   END
